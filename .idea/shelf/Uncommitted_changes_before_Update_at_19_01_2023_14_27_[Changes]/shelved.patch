Index: src/main/java/com/example/g12_theboringchat/Server.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.g12_theboringchat;\r\n\r\nimport java.io.*;\r\nimport java.net.CookieHandler;\r\nimport java.net.ServerSocket;\r\nimport java.net.Socket;\r\nimport java.util.Iterator;\r\nimport java.util.concurrent.*;\r\n\r\npublic class Server implements Runnable{\r\n    private LinkedBlockingQueue<ConnectionHandler> connections;\r\n    private ServerSocket server;\r\n    private boolean done;\r\n    private ExecutorService threadpool;\r\n\r\n    public Server(){\r\n        connections = new LinkedBlockingQueue<>();\r\n        done = false;\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        try {\r\n            server = new ServerSocket(9999);\r\n            threadpool = Executors.newCachedThreadPool();\r\n            System.out.println(\"Server started, waiting for clients.\");\r\n            while(!done){\r\n                Socket client = server.accept();\r\n                System.out.println(client.getClass().getSimpleName());\r\n                ConnectionHandler handler = new ConnectionHandler(client);\r\n                connections = new LinkedBlockingQueue<>();\r\n                threadpool.execute(handler); //threadpool instead of individual threads to make it easier cause of frequent connections\r\n            }\r\n        } catch (Exception e) { //should shutdown no matter the exception\r\n            shutdown();\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    //broadcast msg from server to all clients\r\n    public void broadcast(String msg, ConnectionHandler sender){\r\n        for(ConnectionHandler ch : connections){\r\n            if(ch != null && ch != sender){\r\n                ch.out.println(msg);\r\n            }\r\n        }\r\n    }\r\n\r\n    //shutdown server\r\n    public void shutdown() {\r\n        try{\r\n            done = true;\r\n            threadpool.shutdown();\r\n            if(!server.isClosed()){\r\n                server.close();\r\n            }\r\n        } catch(IOException e){\r\n            e.printStackTrace();\r\n            System.out.println(\"Error with server shutdown function...\");\r\n            //ignore, cant do anything about it\r\n        }\r\n    }\r\n\r\n    public class ConnectionHandler implements Runnable{\r\n        private Socket client;\r\n        private BufferedReader in;\r\n        private PrintWriter out;\r\n        private String name;\r\n\r\n        public ConnectionHandler(Socket client) throws IOException {\r\n            this.client = client;\r\n        }\r\n        @Override\r\n        public void run() {\r\n            try{\r\n                connections.offer(this);\r\n                out = new PrintWriter(client.getOutputStream(), true);\r\n                in = new BufferedReader(new InputStreamReader(client.getInputStream()));\r\n                out.println(\"Please enter a nickname:\");\r\n                name = in.readLine();\r\n                System.out.println(name+\" connected\");\r\n                broadcast(name+\" has joined the chat!\", this);\r\n\r\n                String msg;\r\n                while((msg = in.readLine()) != null){\r\n                    if(msg.startsWith(\"/quit\")){\r\n                        broadcast(name+\"left the chat\", this);\r\n                        shutdownClient();\r\n                    } else if(msg.startsWith(\"/nick \")){\r\n                        String[] messageSplit = msg.split(\" \",2);\r\n                        if(messageSplit.length == 2){\r\n                            System.out.println(name+\" renamed themselves to \"+messageSplit[1]);\r\n                            name = messageSplit[1];\r\n                            out.println(\"Successfully changed nickname to \"+name);\r\n                        } else{\r\n                            out.println(\"No nickname provided.\");\r\n                        }\r\n                    }else {\r\n                        System.out.println(name+\": \"+msg);\r\n                        broadcast(name+\": \"+msg, this);\r\n                    }\r\n                }\r\n            } catch(IOException e){\r\n                shutdownClient();\r\n            }\r\n        }\r\n\r\n        public void shutdownClient(){\r\n            connections.remove(this);\r\n            try{\r\n                if(!client.isClosed()){\r\n                    client.close();\r\n                }\r\n            } catch(IOException e){\r\n                e.printStackTrace();\r\n                System.out.println(\"Error with client shutdown function\");\r\n                //ignore\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        Server server = new Server();\r\n        server.run();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/g12_theboringchat/Server.java b/src/main/java/com/example/g12_theboringchat/Server.java
--- a/src/main/java/com/example/g12_theboringchat/Server.java	(revision 9cd7efb7fc1da4b62874f7e329d79378c33899c8)
+++ b/src/main/java/com/example/g12_theboringchat/Server.java	(date 1674134637722)
@@ -40,7 +40,7 @@
     //broadcast msg from server to all clients
     public void broadcast(String msg, ConnectionHandler sender){
         for(ConnectionHandler ch : connections){
-            if(ch != null && ch != sender){
+            if(ch != null  && ch != sender){
                 ch.out.println(msg);
             }
         }
Index: src/main/java/com/example/g12_theboringchat/ClientController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.g12_theboringchat;\r\n\r\nimport javafx.application.Platform;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.TextArea;\r\nimport javafx.scene.control.TextField;\r\n\r\nimport java.io.*;\r\nimport java.net.InetAddress;\r\nimport java.net.Socket;\r\nimport java.util.concurrent.Executor;\r\nimport java.util.concurrent.Executors;\r\nimport java.util.concurrent.LinkedBlockingQueue;\r\nimport java.util.concurrent.ThreadPoolExecutor;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class ClientController implements Runnable {\r\n    @FXML\r\n    private Button btn_sendMessage;\r\n    @FXML\r\n    public TextField txt_message;\r\n    @FXML\r\n    TextArea txt_messageArea;\r\n    public Socket client;\r\n    private boolean done;\r\n    private Executor workerThread;\r\n    private BufferedReader in;\r\n    private PrintWriter out;\r\n    private boolean initialized = false;\r\n\r\n    public ClientController() {\r\n        workerThread = new ThreadPoolExecutor(\r\n                1, // core pool size\r\n                1, // maximum pool size\r\n                0L, // keep-alive time\r\n                TimeUnit.MILLISECONDS, // time unit\r\n                new LinkedBlockingQueue<>() // work queue\r\n        );\r\n    }\r\n\r\n    @FXML\r\n    public void initialize() {\r\n        this.run();\r\n        initialized = true;\r\n        txt_messageArea.setEditable(false);\r\n        workerThread = Executors.newSingleThreadExecutor();\r\n    }\r\n\r\n    @Override\r\n    public void run() {\r\n        initialized = true;\r\n        done = false;\r\n        try {\r\n            InetAddress host = InetAddress.getLocalHost();\r\n\r\n            client = new Socket(\"127.0.0.1\", 9999);\r\n            System.out.println(\"Client: connected to \" + host.getHostName());\r\n\r\n            in = new BufferedReader(new InputStreamReader(client.getInputStream()));\r\n            out = new PrintWriter(client.getOutputStream(), true);\r\n\r\n            receiveMessages();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            System.out.println(\"Error creating client...\");\r\n            shutdown();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    public void btnSendMsg(ActionEvent event) {\r\n        String message = txt_message.getText();\r\n        System.out.println(message);\r\n        if(message != null){\r\n            workerThread.execute(() -> out.println(message));\r\n            out.flush();\r\n\r\n            txt_messageArea.appendText(message+\"\\n\");\r\n            if(message.startsWith(\"/quit\")){\r\n                shutdown();\r\n            }\r\n\r\n            txt_message.clear();\r\n        }\r\n    }\r\n\r\n    public void receiveMessages() {\r\n        Executor receiveExecutor = Executors.newSingleThreadExecutor();\r\n        receiveExecutor.execute(() -> {\r\n            try {\r\n                while (!done) {\r\n                    String message;\r\n                    while((message = in.readLine()) != null){\r\n                        System.out.println(\"Message from server: \" + message);\r\n\r\n                        txt_messageArea.appendText(message+\"\\n\");\r\n                        //Platform.runLater(() -> txt_messageArea.appendText(message +\"\\n\"));\r\n                    }\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n                shutdown();\r\n            }\r\n        });\r\n    }\r\n    public void shutdown() {\r\n        done = true;\r\n        try {\r\n            if (!client.isClosed()) {\r\n                client.close();\r\n            }\r\n            System.exit(0);\r\n        } catch (IOException e) {\r\n            e.getMessage();\r\n            // can't do anything about it\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/g12_theboringchat/ClientController.java b/src/main/java/com/example/g12_theboringchat/ClientController.java
--- a/src/main/java/com/example/g12_theboringchat/ClientController.java	(revision 9cd7efb7fc1da4b62874f7e329d79378c33899c8)
+++ b/src/main/java/com/example/g12_theboringchat/ClientController.java	(date 1674134630574)
@@ -76,8 +76,8 @@
         if(message != null){
             workerThread.execute(() -> out.println(message));
             out.flush();
+            txt_messageArea.appendText("Me: "+message+"\n");
 
-            txt_messageArea.appendText(message+"\n");
             if(message.startsWith("/quit")){
                 shutdown();
             }
@@ -93,7 +93,7 @@
                 while (!done) {
                     String message;
                     while((message = in.readLine()) != null){
-                        System.out.println("Message from server: " + message);
+                        System.out.println(message);
 
                         txt_messageArea.appendText(message+"\n");
                         //Platform.runLater(() -> txt_messageArea.appendText(message +"\n"));
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1d4c530b-4a92-46ef-8d31-7665ff1181af\" name=\"Changes\" comment=\"worked on 1-message but (no fix), nickname feature added\">\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/ClientController.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/ClientController.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/Server.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/Server.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2K6TF7lfM7X7WtzOs0fNmClCFsn\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/lukas/Downloads/one-dark-theme-5.7.2.zip\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.ClientApplication\">\r\n    <configuration name=\"ClientApplication\" type=\"Application\" factoryName=\"Application\" singleton=\"false\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.g12_theboringchat.ClientApplication\" />\r\n      <module name=\"G12_TheBoringChat\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.g12_theboringchat.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Server\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.g12_theboringchat.Server\" />\r\n      <module name=\"G12_TheBoringChat\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.g12_theboringchat.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.ClientApplication\" />\r\n      <item itemvalue=\"Application.Server\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.ClientApplication\" />\r\n        <item itemvalue=\"Application.Server\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1d4c530b-4a92-46ef-8d31-7665ff1181af\" name=\"Changes\" comment=\"\" />\r\n      <created>1673293925597</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1673293925597</updated>\r\n      <workItem from=\"1673293927395\" duration=\"8000000\" />\r\n      <workItem from=\"1673974677656\" duration=\"9104000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"big scare, big fix\">\r\n      <created>1673294359723</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1673294359723</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"worked on 1-message but (no fix), nickname feature added\">\r\n      <created>1674086286867</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1674086286867</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"big scare, big fix\" />\r\n    <MESSAGE value=\"worked on 1-message but (no fix), nickname feature added\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"worked on 1-message but (no fix), nickname feature added\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 9cd7efb7fc1da4b62874f7e329d79378c33899c8)
+++ b/.idea/workspace.xml	(date 1674134637861)
@@ -4,7 +4,8 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1d4c530b-4a92-46ef-8d31-7665ff1181af" name="Changes" comment="worked on 1-message but (no fix), nickname feature added">
+    <list default="true" id="1d4c530b-4a92-46ef-8d31-7665ff1181af" name="Changes" comment="fix: 1msg per client, issue: one client cant see msg">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/ClientController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/ClientController.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/Server.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/g12_theboringchat/Server.java" afterDir="false" />
     </list>
@@ -87,7 +88,7 @@
       <option name="presentableId" value="Default" />
       <updated>1673293925597</updated>
       <workItem from="1673293927395" duration="8000000" />
-      <workItem from="1673974677656" duration="9104000" />
+      <workItem from="1673974677656" duration="10642000" />
     </task>
     <task id="LOCAL-00001" summary="big scare, big fix">
       <created>1673294359723</created>
@@ -103,7 +104,14 @@
       <option name="project" value="LOCAL" />
       <updated>1674086286867</updated>
     </task>
-    <option name="localTasksCounter" value="3" />
+    <task id="LOCAL-00003" summary="fix: 1msg per client, issue: one client cant see msg">
+      <created>1674090555335</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1674090555335</updated>
+    </task>
+    <option name="localTasksCounter" value="4" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -123,6 +131,7 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="big scare, big fix" />
     <MESSAGE value="worked on 1-message but (no fix), nickname feature added" />
-    <option name="LAST_COMMIT_MESSAGE" value="worked on 1-message but (no fix), nickname feature added" />
+    <MESSAGE value="fix: 1msg per client, issue: one client cant see msg" />
+    <option name="LAST_COMMIT_MESSAGE" value="fix: 1msg per client, issue: one client cant see msg" />
   </component>
 </project>
\ No newline at end of file
